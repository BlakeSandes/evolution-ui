@charset "UTF-8";
/******************************************************************************
                        Readability Improvement component
******************************************************************************/
.evo_c-readabilityDocument {
  font-size: 100%;
  transition: font-size .2s linear;
  height: 100%;
}

.evo_c-readabilityPlaceholder {
  position: fixed;
  top: 0;
  right: 0;
  margin: 12px;
}

.evo_c-readabilityElement {
  position: relative;
  display: inline-block;
  overflow: hidden;
  padding: 0;
  width: 80px;
  border: none;
}

.evo_c-readabilityElement * {
  box-sizing: border-box;
}

.evo_c-readabilityElement:hover + .evo_c-readabilityElement__toolTip {
  display: block;
}

.evo_c-readabilityElement__toggleInput {
  display: none;
}

.evo_c-readabilityElement__toggleInput:checked + .evo_c-readabilityElement__label {
  position: relative;
  border: solid #A06EBD;
  border-width: 5px 5px 5px 45px;
  background-color: white;
  transition: border-width .1s linear;
}

.evo_c-readabilityElement__toggleInput + .evo_c-readabilityElement__label:after {
  top: 3px;
  left: 43px;
  position: absolute;
  color: white;
  font-size: 25px;
}

.evo_c-readabilityElement__toggleInput:checked + .evo_c-readabilityElement__label:before {
  top: 3px;
  left: -32px;
  position: absolute;
  color: white;
  font-size: 25px;
  font-family: "Material Icons";
}

.evo_c-readabilityElement__toggleInput:checked + .evo_c-readabilityElement__label:after {
  content: "\2001";
}

.evo_c-readabilityElement__label {
  position: relative;
  display: block;
  height: 40px;
  border: solid #768BA1;
  border-width: 5px 45px 5px 5px;
  background-color: white;
  cursor: pointer;
  transition: border-width .1s linear;
}

.evo_c-readabilityElement__label--invertColors:after {
  content: "\E0C4";
}

.evo_c-readabilityElement__toggleInput:checked + .evo_c-readabilityElement__label--invertColors:before {
  content: "\E891";
}

.evo_c-readabilityElement__label--grayScale:after {
  content: "\E3B7";
}

.evo_c-readabilityElement__toggleInput:checked + .evo_c-readabilityElement__label--grayScale:before {
  content: "\E3B7";
}

.evo_c-readabilityElement__label--textSize:after {
  content: "\E245";
}

.evo_c-readabilityElement__toggleInput:checked + .evo_c-readabilityElement__label--textSize:before {
  content: "\E245";
}

.evo_c-readabilityElement__toolTip--invertColors {
  left: -19%;
}

.evo_c-readabilityElement__toolTip--grayScale {
  left: -9%;
}

.evo_c-readabilityElement__toolTip--textSize {
  left: 37%;
}

.evo_c-readabilityElement__toolTip {
  position: absolute;
  display: none;
  padding: 5px;
  background-color: #768BA1;
  color: #1E2226;
  white-space: nowrap;
}

.evo_c-readabilityElement__toolTip:after {
  position: absolute;
  top: -.5em;
  right: .25em;
  border-right: .75em solid transparent;
  border-bottom: 0.75em solid #768BA1;
  border-left: .75em solid transparent;
  content: " ";
}

.evo_c-readability_Invert {
  filter: invert(100%);
}

.evo_c-readability_Grayscale {
  filter: grayscale(1);
}

.evo_c-readability_LargerFont {
  font-size: 125% !important;
  transition: font-size .1s linear;
}

/* EYELIDS COMPONENT */
.evo_c-eyelids--top, .evo_c-eyelids--bottom {
  /* Positioning */
  position: fixed;
  z-index: 9999;
  /* Box Model */
  display: block;
  width: 100%;
  /* Visual */
  opacity: .98;
  /* Misc */
  content: '';
  transition: all .2s ease-in-out 0s;
}

.evo_c-eyelids-notification {
  /* Positioning */
  position: fixed;
  top: 10px;
  right: 10px;
  z-index: 999999;
  transform: translate3d(100%, 0, 0);
  /* Box Model */
  box-sizing: border-box;
  width: 280px;
  padding: 10px 20px;
  /* Typography */
  text-align: center;
  text-transform: uppercase;
  /* Visual Aspect */
  border-radius: 30px;
  background-color: #80d26b;
  box-shadow: 2px 2px 5px 1px rgba(0, 0, 0, 0.3);
  /* Animations */
  transition: all .3s ease-in-out 0s;
  /* Misc */
  cursor: pointer;
}
.evo_c-eyelids-notification.is-active {
  animation: notify 5s cubic-bezier(0.19, 1, 0.22, 1) 0s forwards;
}
.evo_c-eyelids-notification p {
  margin-top: 0;
}

@keyframes notify {
  0% {
    transform: translate3d(100%, 0, 0);
  }
  5% {
    transform: translate3d(0, 0, 0);
  }
  95% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(100%, 0, 0);
  }
}
.evo_c-eyelids--top {
  /* Positioning */
  top: 0;
  /* Box Model */
  height: 0;
  /* Visual Aspect */
  background-image: linear-gradient(to top, rgba(255, 255, 255, 0) 0%, #585c62 10%, #404347 60%);
}

.evo_c-eyelids--bottom {
  /* Positioning */
  bottom: 0;
  top: 100vh;
  /* Visual Aspect */
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, #585c62 10%, #404347 60%);
}

.evo_c-eyelids-helper {
  /* Positioning */
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 9999;
  /* Typography */
  color: rgba(255, 255, 255, 0.8);
  /* Visual Aspect */
  /* Misc */
  pointer-events: none;
}
.evo_c-eyelids-helper ul {
  list-style: disc;
}

/* END EYELIDS */
/******************************************************************************
                              Crumble component
******************************************************************************/
.evo_c-crumble .evo_c-event__header, .evo_c-crumble .evo_c-event__body {
  transition: transform 0.7s cubic-bezier(0.22, 0.61, 0.36, 1);
}

.evo_c-crumble__icon, .evo_c-crumble__icon--close, .evo_c-crumble__icon--expand {
  cursor: pointer;
}

.evo_c-crumble .evo_c-event__header.is-rotate-to-initial, .evo_c-crumble .evo_c-event__body.is-rotate-to-initial {
  transform: rotateX(0) !important;
}

.evo_c-crumble {
  font-size: 1rem;
  line-height: 1.5rem;
  margin-top: 0rem;
  margin-bottom: 1.5rem;
  font-weight: 300;
}
.evo_c-crumble--full-width .evo_c-crumble__item {
  display: block;
}
.evo_c-crumble__list {
  padding: 0;
  list-style-type: none;
}
.evo_c-crumble__list--actions {
  display: flex;
  justify-content: center;
}
.evo_c-crumble__item {
  position: relative;
  display: flex;
  align-items: center;
  background-color: #49a7bd;
  border: 1px solid #cecece;
}
.evo_c-crumble__item:hover {
  background-color: rgba(86, 197, 222, 0.9);
}
.evo_c-crumble__tag {
  position: absolute;
  left: 10px;
  top: 0;
  display: flex;
  height: 100%;
  width: 60px;
  background-color: #c4c4b3;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}
.evo_c-crumble__tag:after {
  content: attr(data-tag);
  text-transform: uppercase;
  font-size: .8em;
}
.evo_c-crumble__span {
  display: flex;
  align-items: center;
  color: white;
  padding-left: 100px;
  min-height: 50px;
}
.evo_c-crumble__span.is-active {
  min-height: 0;
  height: 0;
  width: 0;
  overflow: hidden;
}
.evo_c-crumble__icon {
  position: relative;
  bottom: 10px;
  padding: 10px;
  color: rgba(255, 255, 255, 0.69);
  background-color: #8b9caf;
}
.evo_c-crumble__icon:hover {
  background-color: #768ba1;
  color: white;
}
.evo_c-crumble__icon--close {
  position: absolute;
  right: 5px;
  top: 5px;
  color: rgba(255, 255, 255, 0.6);
  transition: transform 0.7s cubic-bezier(0.39, 0.58, 0.57, 1);
}
.evo_c-crumble__icon--close:hover {
  color: white;
  transform: rotate(360deg);
}
.evo_c-crumble__icon--expand {
  padding: 10px;
  margin: 0 10px;
  background-color: rgba(255, 255, 255, 0.05);
}
.evo_c-crumble .evo_c-event {
  min-height: 0;
  height: 0;
  background-color: black;
  overflow: hidden;
  transition: min-height 1s cubic-bezier(0, 1.02, 0, 1);
  perspective: 40px;
  cursor: initial;
}
.evo_c-crumble .evo_c-event.is-open {
  min-height: 120px;
  height: auto;
  width: 100%;
  overflow: initial;
}
.evo_c-crumble .evo_c-event__title {
  color: white;
  text-transform: uppercase;
  letter-spacing: .3rem;
}
.evo_c-crumble .evo_c-event__header {
  position: relative;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  height: 60px;
  text-align: center;
  background-color: #404347;
  transform: rotateX(-10deg);
  transform-origin: 50% 0;
  transform-style: preserve-3d;
}
.evo_c-crumble .evo_c-event__body {
  height: 60px;
  background-color: #6f6f6f;
  text-align: center;
  transform: rotateX(10deg);
  transform-origin: 50% 100%;
  transform-style: preserve-3d;
  overflow: visible;
}
.evo_c-crumble .evo_c-event__description {
  padding: 5px;
  color: rgba(255, 255, 255, 0.8);
}

/******************************************************************************
                        Cubby component
******************************************************************************/
.evo_c-cubby {
  position: relative;
  perspective: 500px;
}
.evo_c-cubby__door {
  position: absolute;
  padding: 5px 0;
  background: #6fcee3;
  width: 100%;
  text-align: center;
  line-height: 3em;
  transform-style: preserve-3d;
  transform-origin: bottom;
  transition: all .3s ease;
}
.evo_c-cubby__inside {
  position: absolute;
  z-index: -5;
  padding: 5px 0;
  background: #647689;
  width: 100%;
  color: white;
  text-align: center;
  line-height: 3em;
}
.evo_c-cubby:hover .evo_c-cubby__door, .evo_c-cubby:focus .evo_c-cubby__door {
  transform: rotateX(-90deg);
}

/** END CUBBY COMPONENT **/
/******************************************************************************
                        Fade Lines On Scroll component
******************************************************************************/
.js-c-fade-lines-target {
  opacity: 1;
}

/* DOT NAVIGATION COMPONENT */
.evo_dot-navigation {
  display: inline-block;
  margin: 30px 0;
  box-sizing: border-box;
}
.evo_dot-navigation *,
.evo_dot-navigation *::before,
.evo_dot-navigation *::after {
  box-sizing: border-box;
}
.evo_dot-navigation ul {
  list-style: none;
  padding: 0;
  margin: 0;
  position: relative;
}
.evo_dot-navigation ul li {
  display: inline-block;
  margin: 0 15px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.15s ease-in-out 0s;
}
.evo_dot-navigation.evo_dot-navigation-burst ul li {
  border: 1px dotted #e57b7b;
}
.evo_dot-navigation.evo_dot-navigation-burst ul li:hover, .evo_dot-navigation.evo_dot-navigation-burst ul li.evo_dot-current {
  border: 5px solid #e57b7b;
}
.evo_dot-navigation.evo_dot-navigation-scale ul li {
  background-color: rgba(160, 110, 189, 0.7);
  border: 1px solid rgba(160, 110, 189, 0.7);
}
.evo_dot-navigation.evo_dot-navigation-scale ul li:hover, .evo_dot-navigation.evo_dot-navigation-scale ul li.evo_dot-current {
  transform: scale(1.2);
  background-color: #a06ebd;
  border: 1px solid #a06ebd;
}
.evo_dot-navigation.evo_dot-navigation-jiggle ul li {
  background-color: #56c5de;
}
.evo_dot-navigation.evo_dot-navigation-jiggle ul li:hover, .evo_dot-navigation.evo_dot-navigation-jiggle ul li.evo_dot-current {
  background-color: #6c8cd7;
}
.evo_dot-navigation.evo_dot-navigation-jiggle ul #evo_dot-mask {
  position: absolute;
  left: 15px;
  top: 0;
  display: block;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #6c8cd7;
  transition: left 0.5s cubic-bezier(0.19, 1, 0.22, 1) 0s;
}
.evo_dot-navigation.evo_dot-navigation-jiggle ul #evo_dot-mask.moving {
  animation: jiggle 0.3s cubic-bezier(0.19, 1, 0.22, 1) 0s forwards;
}
@keyframes jiggle {
  0%, 100% {
    transform: translateY(0px);
  }
  5%, 15%, 25%, 35%, 45%, 55%, 65%, 75%, 85%, 95% {
    transform: translateY(-10px);
  }
  10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90% {
    transform: translateY(10px);
  }
}
.evo_dot-navigation.evo_dot-navigation-zap ul #evo_dot-line {
  position: absolute;
  top: 8px;
  bottom: 14px;
  right: calc(100% - 27px);
  background-color: rgba(86, 197, 222, 0.7);
  transition: right 0.4s cubic-bezier(0.19, 1, 0.22, 1) 0s, left 0.4s cubic-bezier(0.19, 1, 0.22, 1) 0.2s;
}
.evo_dot-navigation.evo_dot-navigation-zap ul #evo_dot-line.backwards {
  transition: left 0.4s cubic-bezier(0.19, 1, 0.22, 1) 0s, right 0.4s cubic-bezier(0.19, 1, 0.22, 1) 0.2s;
}
.evo_dot-navigation.evo_dot-navigation-zap ul li {
  border: 2px solid #768ba1;
  position: relative;
}
.evo_dot-navigation.evo_dot-navigation-zap ul li::after {
  position: absolute;
  top: 6px;
  left: 6px;
  content: '';
  display: inline-block;
  width: 4px;
  height: 4px;
  border-radius: 50%;
  transition: all 0.8s cubic-bezier(0.19, 1, 0.22, 1) 0.1s;
}
.evo_dot-navigation.evo_dot-navigation-zap ul li:hover::after {
  background-color: #56c5de;
}
.evo_dot-navigation.evo_dot-navigation-zap ul li.evo_dot-current::after {
  background-color: #56c5de;
  transform: scale(5);
}

/* END DOT NAVIGATION */
/*styling for modal button popups*/
* {
  box-sizing: border-box;
}

.demo-wrapper {
  margin-top: 350px;
}

.evo_c-expand-and-fold-out-popup {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
  z-index: 100;
  padding-left: 0;
}

.evo_c-expand-and-fold-out-popup__popup-button {
  display: inline-block;
  background: #73b8ce;
  color: white;
  padding: 13px 33px 13px 20px;
  font-weight: lighter;
  font-size: 1.1em;
  letter-spacing: 1.2px;
  border-radius: 2px;
  position: relative;
  margin: 0 auto;
  cursor: pointer;
  z-index: 0;
  /*-webkit-transition: all .5s;
    transition: all .5s;*/
  transition: z-index 1s;
}

.evo_c-expand-and-fold-out-popup__text-spacer {
  color: transparent;
  margin: 0;
}

.evo_c-expand-and-fold-out-popup__button-text {
  margin: 0 auto;
  position: relative;
  transition: all .3s;
  transition-delay: .2s;
  opacity: 1;
  color: white;
  left: -5px;
}

.evo_c-expand-and-fold-out-popup__popup-corner {
  height: 17px;
  width: 17px;
  position: absolute;
  top: 0;
  right: 0;
  /*background: url(../images/popup-button-arrow.svg) no-repeat, #5daab0;*/
  /*background: url(../../images/popup-button-arrow.svg) no-repeat, #5daab0;*/
  background-size: 7px;
  background-position: 50% 50%;
  transition: all .2s;
  transition-delay: .3s;
  background-color: #6C8CD7;
  background-size: 7px;
  background-position: 50% 50%;
}

.evo_c-expand-and-fold-out-popup__popup {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  transition: all 0.3s cubic-bezier(0, 0, 0.29, 0.97);
  /*  -webkit-transition-delay: .1s;
    transition-delay: .1s;*/
  transition-delay: .2s;
  background: #56C5DE;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  padding-left: 0;
  z-index: 10;
}

.evo_c-expand-and-fold-out-popup__popup--external-link {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  transition: all 0.2s cubic-bezier(0, 0, 0.29, 0.97);
  /*  -webkit-transition-delay: .1s;
    transition-delay: .1s;*/
  background: #73b8ce;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  padding-left: 0;
  z-index: 10;
  text-decoration: none;
}

.evo_c-expand-and-fold-out-popup__popup-text {
  margin: 0;
  width: 100%;
  height: 100%;
  /* overflow: hidden; */
  position: absolute;
  /*padding: 5px;*/
  padding: 20px 15px 30px;
  opacity: 0;
  text-align: center;
  transition: all .5s;
  transition-delay: -.1s;
  color: #1f4240;
  top: 0;
  left: 0;
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: center;
}

.evo_c-expand-and-fold-out-popup__popup-text .evo_c-expand-and-fold-out-popup__content-list {
  /*padding: 15px 0;*/
  padding: 0;
  height: auto;
  width: 90%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-around;
  text-align: left;
  transition: padding .3s 1s;
}

.evo_c-expand-and-fold-out-popup__content-item {
  display: block;
  width: 85%;
  font-size: .95em;
  color: #1f4240;
  transition: all .2s;
  font-weight: 400;
  text-align: left;
  padding: 0;
  position: relative;
}

.evo_c-expand-and-fold-out-popup__content-item:hover {
  background: #90efe9;
}

.evo_c-expand-and-fold-out-popup__content-item::before {
  content: "";
  width: 7px;
  height: 7px;
  border-radius: 50%;
  background: #90efe9;
  position: absolute;
  left: -13px;
  top: 41%;
}

.evo_c-expand-and-fold-out-popup__content-item-link {
  display: block;
  width: 100%;
  height: 100%;
  padding: 13px 33px 13px 15px;
  color: inherit;
  text-decoration: none;
}

.evo_c-expand-and-fold-out-popup__content-h3 {
  margin: 5px 5px 10px;
}

.evo_c-expand-and-fold-out-popup__content-h3,
.evo_c-expand-and-fold-out-popup__content-item-link,
.evo_c-expand-and-fold-out-popup__popup-text .evo_c-expand-and-fold-out-popup__content-item {
  max-height: 0;
  transition: max-height .1s .2s;
}

/*flip header*/
.card-container {
  background-color: transparent;
  height: 50px;
  position: absolute;
  width: 100%;
  /*top: -50px;*/
  top: -40px;
  left: 0;
  -o-perspective: 800px;
  perspective: 800px;
  pointer-events: none;
  transition: top 0s;
  transition-delay: 1s;
}

.card-container--bottom {
  top: auto;
  /*  bottom: 0;*/
  bottom: -3px;
  pointer-events: auto;
  transition: all 0.4s cubic-bezier(0.76, 0.16, 0.1, 0.86) 0.2s;
  opacity: 0;
}

.flip-card {
  width: 100%;
  height: 100%;
  position: absolute;
  /*-webkit-transition: -webkit-transform .3s;
    -moz-transition: -moz-transform .3s;
    -o-transition: -o-transform .3s;
    transition: transform .3s;*/
  transition: transform .6s;
  transition-delay: 0s;
  transform-style: preserve-3d;
  transform-origin: bottom;
  background-color: #6C8CD7;
  transform: rotateX(91.7deg);
}

.flip-card--bottom {
  transform: rotateX(-91.7deg);
  transform-origin: top;
  /*background-color: #75c6c1;*/
  background-color: #6C8CD7;
}

.flip-card__side {
  display: block;
  height: 100%;
  width: 100%;
  color: white;
  text-align: center;
  position: absolute;
  backface-visibility: hidden;
}

.flip-card__header-text {
  height: 100%;
  margin: 0;
  color: white;
  width: 100%;
  font-size: 1.2em;
  padding: 13px;
  transition: color .2s;
  transition: color .2s, opacity .2s .1s;
  opacity: 0;
}

/*animation states*/
.evo_c-expand-and-fold-out-popup__popup-button:hover {
  z-index: 100;
  transition: z-index .8s;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__popup {
  top: -450%;
  left: -50%;
  width: 200%;
  height: 1000%;
  /*    opacity: 1;*/
  transition-delay: 0s;
  /*-webkit-transition: all .35s cubic-bezier(0.76, 0.16, 0.1, 0.86);
    transition: all .35s cubic-bezier(0.76, 0.16, 0.1, 0.86);*/
  transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1) 0.3s;
  box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.36);
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .card-container {
  top: -50px;
  transition: top 0s;
  transition-delay: 0s;
  left: 0;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .card-container--bottom {
  top: auto;
  bottom: -50px;
  transition: none;
  left: 0;
  opacity: 1;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .card-container--bottom:hover .flip-card__header-text {
  color: #1e2226;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .flip-card__header-text {
  opacity: 1;
  transition: opacity .3s .3s;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__popup .evo_c-expand-and-fold-out-popup__button-text {
  opacity: 0;
  transition-delay: .1s;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__popup .evo_c-expand-and-fold-out-popup__popup-corner {
  opacity: 0;
  transition-delay: .1s;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__popup .evo_c-expand-and-fold-out-popup__popup-text {
  transition-delay: .4s;
  opacity: 1;
  border-top: 1px solid rgba(122, 120, 120, 0.25);
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__popup .evo_c-expand-and-fold-out-popup__popup-text .evo_c-expand-and-fold-out-popup__content-h3,
.evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__content-item-link,
.evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__content-item {
  max-height: 100px;
  transition: max-height .3s 0s;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__content-item {
  transition: max-height .3s 0s, background .2s;
  cursor: pointer;
  border-radius: 2px;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__popup-text .evo_c-expand-and-fold-out-popup__content-list {
  padding: 15px 0;
  transition: padding .3s 0s;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .flip-card,
.evo_c-expand-and-fold-out-popup__popup-button:hover .flip-card--bottom {
  transform: rotateX(0deg);
  /*-webkit-transition-delay: .3s;
    transition-delay: .3s;*/
  transition-delay: .0s;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .flip-card:not(.flip-card--bottom) {
  border-right: 2px solid #57a7bc;
  border-left: 2px solid #57a7bc;
}

.evo_c-expand-and-fold-out-popup__popup-button:hover .flip-card--bottom {
  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.36);
}

/*.deactivated .evo_c-expand-and-fold-out-popup__popup {
    background: rgb(165, 204, 202);
}*/
.deactivated .evo_c-expand-and-fold-out-popup__popup {
  background: #a5ccca;
}

/* pop-up button media queries for small screen widths */
/* 1134px */
@media screen and (max-width: 70.875em) {
  .evo_c-expand-and-fold-out-popup__popup-button {
    padding: 13px 18px 13px 18px;
  }
}
/* 1000 */
@media screen and (max-width: 1000px) {
  .evo_c-expand-and-fold-out-popup__list {
    flex-flow: row wrap;
  }

  .evo_c-expand-and-fold-out-popup__popup-button {
    width: 100%;
  }

  .evo_c-expand-and-fold-out-popup__popup-button:nth-of-type(2) {
    margin-top: 3%;
    margin-bottom: 3%;
  }

  .evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__popup {
    top: -450%;
    left: 0;
    width: 100%;
    height: 1000%;
  }

  .demo-wrapper {
    margin-top: 40%;
  }
}
/* 665px */
@media screen and (max-width: 41.563em) {
  .evo_c-expand-and-fold-out-popup__popup-button:hover .evo_c-expand-and-fold-out-popup__popup {
    top: -100%;
    left: 0;
    width: 100%;
    height: 1000%;
  }
}
@media screen and (max-width: 420px) {
  .flip-card__header-text {
    font-size: 1.1em;
  }
}
/******************************************************************************
                              Grid component
******************************************************************************/
.evo_l-grid__row {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  box-sizing: border-box;
}
.evo_l-grid__col {
  flex: 1;
  box-sizing: border-box;
}

@media screen and (min-width: 500px) {
  .evo_l-grid__row {
    flex-direction: row;
  }

  .l-gridrow__gutters > .evo_l-grid__col {
    margin-bottom: 0;
  }
}
.l-gridrow__gutters {
  margin-left: -1em;
}
.l-gridrow__gutters > .evo_l-grid__col {
  padding-left: 1em;
  margin-bottom: 1em;
}

.col1_of16 {
  flex: 0 0 6.25%;
}

.col2_of16 {
  flex: 0 0 12.5%;
}

.col3_of16 {
  flex: 0 0 18.75%;
}

.col4_of16 {
  flex: 0 0 25%;
}

.col5_of16 {
  flex: 0 0 31.25%;
}

.col6_of16 {
  flex: 0 0 37.5%;
}

.col7_of16 {
  flex: 0 0 43.75%;
}

.col8_of16 {
  flex: 0 0 50%;
}

.col9_of16 {
  flex: 0 0 56.25%;
}

.col10_of16 {
  flex: 0 0 62.5%;
}

.col11_of16 {
  flex: 0 0 68.75%;
}

.col12_of16 {
  flex: 0 0 75%;
}

.col13_of16 {
  flex: 0 0 81.25%;
}

.col14_of16 {
  flex: 0 0 87.5%;
}

.col15_of16 {
  flex: 0 0 93.75%;
}

.col16_of16 {
  flex: 0 0 100%;
}

/******************************************************************************
                              Forms component
******************************************************************************/
.evo_c-form__label {
  position: absolute;
}

.evo_c-form__footer, .evo_c-form__field {
  display: flex;
  align-items: center;
}

.evo_c-form__field, .evo_c-form__input--button {
  font-size: 1.125rem;
  line-height: 1.5rem;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.l-grid__item {
  padding: 20px;
}

.evo_c-form {
  padding: 20px;
}
.evo_c-form .h-bck__primary {
  background-color: #56C5DE;
}
.evo_c-form .h-bck__primary--light {
  background-color: #6fcee3;
}
.evo_c-form .h-bck__primary--dark {
  background-color: #49a7bd;
}
.evo_c-form .h-bck__primary--darken {
  background-color: #4194a7;
}
.evo_c-form .h-bck__primary2 {
  background-color: #6C8CD7;
}
.evo_c-form .h-bck__primary2--light {
  background-color: #829ddd;
}
.evo_c-form .h-bck__primary2--dark {
  background-color: #5c77b7;
}
.evo_c-form .h-bck__primary2--darken {
  background-color: #5169a1;
}
.evo_c-form .h-bck__accent {
  background-color: #A06EBD;
}
.evo_c-form .h-bck__accent--light {
  background-color: #ae84c7;
}
.evo_c-form .h-bck__accent--dark {
  background-color: #885ea1;
}
.evo_c-form .h-bck__accent--darken {
  background-color: #78538e;
}
.evo_c-form .h-bck__accent2 {
  background-color: #E57B7B;
}
.evo_c-form .h-bck__accent2--light {
  background-color: #e98f8f;
}
.evo_c-form .h-bck__accent2--dark {
  background-color: #c36969;
}
.evo_c-form .h-bck__accent2--darken {
  background-color: #ac5c5c;
}
.evo_c-form .h-bck__accent3 {
  background-color: #E189B9;
}
.evo_c-form .h-bck__accent3--light {
  background-color: #e69bc4;
}
.evo_c-form .h-bck__accent3--dark {
  background-color: #bf749d;
}
.evo_c-form .h-bck__accent3--darken {
  background-color: #a9678b;
}
.evo_c-form .h-bck__accent4 {
  background-color: #80D26B;
}
.evo_c-form .h-bck__accent4--light {
  background-color: #99db89;
}
.evo_c-form .h-bck__accent4--dark {
  background-color: #6db35b;
}
.evo_c-form .h-bck__accent4--darken {
  background-color: #609e50;
}
.evo_c-form .h-bck__secondary {
  background-color: #768BA1;
}
.evo_c-form .h-bck__secondary--light {
  background-color: #8b9caf;
}
.evo_c-form .h-bck__secondary--dark {
  background-color: #647689;
}
.evo_c-form .h-bck__secondary--darken {
  background-color: #596879;
}
.evo_c-form .h-bck__background {
  background-color: #1E2226;
}
.evo_c-form .h-bck__background--light {
  background-color: #404347;
}
.evo_c-form .h-bck__background--dark {
  background-color: #1a1d20;
}
.evo_c-form .h-full-width {
  width: 100%;
}
.evo_c-form .h-border-style--dotted {
  border-style: dotted;
}
.evo_c-form .h-border-style--dashed {
  border-style: dashed;
}
.evo_c-form .h-3D {
  box-shadow: 0 3px 0 0 rgba(0, 0, 0, 0.23);
}
.evo_c-form .h-3D:active {
  top: 3px;
  box-shadow: none;
}
.evo_c-form * {
  box-sizing: border-box;
}
.evo_c-form *:focus {
  outline: 0;
}
.evo_c-form__footer {
  height: 6.25rem;
  margin-top: 3.625rem;
  margin-bottom: 2.125rem;
}
.evo_c-form__field {
  position: relative;
}
.evo_c-form__field .h-field-status {
  position: relative;
  width: 21%;
  max-width: 200px;
  padding-left: 10px;
  font-size: 1rem;
}
.evo_c-form__field .h-field-status:before {
  content: '';
  padding-right: 10px;
}
.evo_c-form__field .h-field-status:after {
  display: none;
  content: '';
  position: absolute;
  left: 30px;
  color: inherit;
}
@media screen and (min-width: 768px) {
  .evo_c-form__field .h-field-status:after {
    display: inline-block;
  }
}
.evo_c-form__input {
  display: inline-block;
  height: 38px;
  padding: 10px;
  font-size: inherit;
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 90%;
  border: 0;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  transition: border-bottom .3s,border-color .3s,border-width .3s,border .3s ease-in-out;
}
.evo_c-form__input:valid + .h-field-status:before {
  content: "✓" !important;
  color: #6db35b;
}
.evo_c-form__input:valid + .h-field-status:after {
  content: '';
}
.evo_c-form__input:invalid + .h-field-status {
  color: red;
}
.evo_c-form__input:invalid + .h-field-status:before {
  content: '\2715';
  color: inherit;
}
.evo_c-form__input:required + .h-field-status:before {
  content: '\002A';
}
.evo_c-form__input--button {
  margin-left: auto;
  margin-right: auto;
  width: 90%;
  max-width: 400px;
  padding: 10px;
  background-color: white;
  border: 1px solid #829ddd;
  border-radius: 4px;
  cursor: pointer;
  transition: all .2s linear;
}
.evo_c-form__input--button:hover {
  color: white;
  background-color: #829ddd;
}
.evo_c-form__label {
  left: 30px;
  transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
}
.evo_c-form__label .h-label--active {
  transform: translate3d(0, -25px, 0) scale(0.8);
}
.evo_c-form__icon + .evo_c-form__input {
  margin-left: 10px;
}

/* OFF CANVAS NAVIGATION COMPONENT  */
body {
  position: relative;
  margin: 0;
}

.evo_aside {
  box-sizing: border-box;
  overflow: hidden;
  margin: 20px;
  max-width: 30vw;
  background-color: #1e2226;
  border-radius: 3px;
}
.evo_aside * {
  box-sizing: border-box;
}
.evo_aside.evo_left {
  margin-left: 0;
  text-align: right;
  float: left;
}
.evo_aside.evo_left li {
  border-right: 5px solid transparent;
}
.evo_aside.evo_left li.evo_sidenav-current,
.evo_aside.evo_left li:hover {
  border-right: 5px solid #768ba1;
}
.evo_aside ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
.evo_aside ul li {
  transition: all 0.2s ease-in-out 0s;
}
.evo_aside ul li.evo_sidenav-current a,
.evo_aside ul li a:hover {
  background-color: #56c5de;
  color: #768ba1;
}
.evo_aside ul li a {
  display: block;
  height: 100%;
  padding: 15px;
  text-decoration: none;
  color: #56c5de;
}
.evo_aside.evo_theme-light {
  background-color: #56c5de;
}
.evo_aside.evo_theme-light ul li.evo_sidenav-current a,
.evo_aside.evo_theme-light ul li a:hover {
  background-color: #1e2226;
  color: #768ba1;
}
.evo_aside.evo_theme-light ul li a {
  color: #1e2226;
}
.evo_aside.evo_theme-light.evo_left li.evo_sidenav-current,
.evo_aside.evo_theme-light.evo_left li:hover {
  border-right: 5px solid #768ba1;
}

.evo_offcanvas-wrapper {
  background-color: white;
  padding: 20px 40px;
}

.evo_offcanvas-wrapper::after {
  content: '';
  display: block;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: black;
  opacity: 0;
  pointer-events: none;
  transition: all 0.5s ease-in-out 0s;
}

body.evo_offcanvas-menu-active {
  overflow: hidden;
}
body.evo_offcanvas-menu-active .evo_offcanvas-wrapper::after {
  opacity: 0.4;
}
body.evo_offcanvas-menu-active .evo_offcanvas-wrapper > .evo_offcanvas-wrapper--inner {
  pointer-events: none;
}

.evo_offcanvas-menu-slide-in,
.evo_offcanvas-menu-slide-over,
.evo_offcanvas-menu-reveal,
.evo_offcanvas-menu-swing {
  display: inline-block;
  position: fixed;
  top: 0;
  bottom: 0;
  left: -300px;
  z-index: 1000;
  transition: all 0.5s ease-in-out 0s;
}
.evo_offcanvas-menu-slide-in .evo_aside,
.evo_offcanvas-menu-slide-over .evo_aside,
.evo_offcanvas-menu-reveal .evo_aside,
.evo_offcanvas-menu-swing .evo_aside {
  margin: 0;
  width: 300px;
  max-width: 90vw;
  height: 100%;
  border-radius: 0;
}
.evo_offcanvas-menu-slide-in ~ .evo_offcanvas-wrapper,
.evo_offcanvas-menu-slide-over ~ .evo_offcanvas-wrapper,
.evo_offcanvas-menu-reveal ~ .evo_offcanvas-wrapper,
.evo_offcanvas-menu-swing ~ .evo_offcanvas-wrapper {
  padding-bottom: 1px;
  position: relative;
  transition: all 0.5s ease-in-out 0s;
}

.evo_offcanvas-menu-slide-over[data-menu-effect="slide-over"] {
  z-index: 2000;
  transform: translate3d(100%, 0, 0);
}

.evo_offcanvas-menu-slide-in[data-menu-effect="slide-in"] {
  transform: translate3d(100%, 0, 0);
}
.evo_offcanvas-menu-slide-in[data-menu-effect="slide-in"] ~ .evo_offcanvas-wrapper {
  transform: translate3d(300px, 0, 0);
}

.evo_offcanvas-menu-reveal {
  left: 0;
  z-index: 10;
}
.evo_offcanvas-menu-reveal ~ .evo_offcanvas-wrapper {
  z-index: 1000;
}
.evo_offcanvas-menu-reveal[data-menu-effect="reveal"] ~ .evo_offcanvas-wrapper {
  transform: translate3d(300px, 0, 0);
}

/* END OFF CANVAS NAVIGATION */



/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
